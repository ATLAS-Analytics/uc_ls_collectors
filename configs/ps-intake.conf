input { 
  http {
    host => "0.0.0.0"
    port => "80"
  }
}

filter {
  if [test][type]=="trace" or [test][type]=="latencybg" or [test][type]=="throughput" {

    mutate {
      remove_field => ["reference", "headers", "task", "schedule", "participants", "run", "tool", "@version", "schedule", "host"]
      copy => { "[run][end-time]" => "timestamp" }
      copy => { "@timestamp" => "ingest_timestamp" }
      copy => { "[test][spec][source]" => "src_host" }
      copy => { "[test][spec][dest]" => "dest_host" }
      rename => { "id" => "[@metadata][id]" } 
      add_field => { "push" => true }
    }
    
    memcached {
      hosts => ["memcached"]
      get => {
        "ip_%{src_host}" => "[source]"
        "ip_%{dest_host}" => "[destination]"
        "vo_%{[src_host]}" => "[src_VO]"
        "vo_%{[dest_host]}" => "[dest_VO]"
        "sitename_%{[src_host]}" => "[src_site]"
        "sitename_%{[dest_host]}" => "[dest_site]"
        "rcsite_%{[src_host]}" => "[src_rcsite]"
        "rcsite_%{[dest_host]}" => "[dest_rcsite]"
        "production_%{[src_host]}" => "[src_production]"
        "production_%{[dest_host]}" => "[dest_production]"
      }
    }
    
    if ![source] or ![destination]{
      ruby { path => "/usr/share/logstash/filters/enrich.rb" }
      memcached {
        hosts => ["memcached"]
        ttl => 43200
        set => {
          "source" => "ip_%{src_host}"
          "destination" => "ip_%{dest_host}"
        }
      }
    }

    mutate { 
      convert => { "src_production" => "boolean" }
      convert => { "dest_production" => "boolean" }
      convert => { "push" => "boolean" }
      uppercase => [ "src_VO", "dest_VO" ]
    }

  }
}

output { 
  if [test][type]=="trace"{
    pipeline { send_to => ["ps-trace"] } 
  }
  else if [test][type]=="latencybg"{
    pipeline { send_to => ["ps-latencybg"] } 
  }
  else if [test][type]=="throughput"{
    pipeline { send_to => ["ps-throughput"] } 
  }
  else if [type]=="status" {
    pipeline { send_to => ["ps-status"] } 
  }
  else if [type]=="meta" {
    pipeline { send_to => ["ps-meta"] } 
  }
}