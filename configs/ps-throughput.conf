input { pipeline { address => "ps-throughput" } }

filter {

  mutate {
    remove_field => ["reference", "headers", "task", "schedule", "participants", "run", "tool", "@version", "schedule", "host"]
    copy => { "[run][end-time]" => "timestamp" }
    copy => { "@timestamp" => "ingest_timestamp" }
    copy => { "[test][spec][source]" => "src_host" }
    copy => { "[test][spec][dest]" => "dest_host" }
    rename => { "id" => "[@metadata][id]" } 
    add_field => { "push" => true }
    add_field => { "[@metadata][type]" => "throughput" } 
  }
  
  memcached {
    hosts => ["memcached"]
    get => {
      "ip_%{src_host}" => "[source]"
      "ip_%{dest_host}" => "[destination]"
      "vo_%{[src_host]}" => "[src_VO]"
      "vo_%{[dest_host]}" => "[dest_VO]"
      "sitename_%{[src_host]}" => "[src_site]"
      "sitename_%{[dest_host]}" => "[dest_site]"
      "rcsite_%{[src_host]}" => "[src_rcsite]"
      "rcsite_%{[dest_host]}" => "[dest_rcsite]"
      "production_%{[src_host]}" => "[src_production]"
      "production_%{[dest_host]}" => "[dest_production]"
    }
  }

  if ![source] or ![destination]{
    ruby { path => "/usr/share/logstash/filters/enrich.rb" }
    memcached {
      hosts => ["memcached"]
      ttl => 43200
      set => {
        "source" => "ip_%{src_host}"
        "destination" => "ip_%{dest_host}"
      }
    }
  }
  
  mutate { 
    convert => { "src_production" => "boolean" }
    convert => { "dest_production" => "boolean" }
    convert => { "push" => "boolean" }
  }


  mutate {
    copy => { "[result][summary][summary][throughput-bytes]" => "throughput"}
    copy => { "[result][summary][summary][retransmits]" => "retransmits"}
  }

  if [test][spec][ip-version] == 6 {
    mutate { 
      add_field => { "ipv6" => true } 
      add_field => { "src" => "%{[source][ipv6]}" } 
      add_field => { "dest" => "%{[destination][ipv6]}" } 
    }
  } else {
    mutate { 
      add_field => { "ipv6" => false } 
      add_field => { "src" => "%{[source][ipv4]}" } 
      add_field => { "dest" => "%{[destination][ipv4]}" } 
      }
  }

  
  
  if ![tags] { # for problematic things don't remove fields
    mutate{
      remove_field => ["type", "test", "result", "@timestamp"] 
      convert => { "ipv6" => "boolean" }
    }
  }

}

output {
  pipeline { send_to => [es-output] }
}
