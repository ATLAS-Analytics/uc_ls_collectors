input {

  http {
    host => "0.0.0.0"
    port => "80"
  }
  
}

filter {

  mutate {
    remove_field => ["reference", "headers", "task", "schedule", "participants", "run", "tool", "@version", "schedule"]
    rename => { "@timestamp" => "timestamp" }
    rename => { "id" => "[@metadata][id]" } 
  }

  if [test][type]=="trace" {
    mutate {
      add_field => { "[@metadata][type]" => "trace" } 
    }
  } else if [test][type]=="latencybg" {
    
    ruby {
        path => "/usr/share/logstash/filters/latency.rb"
    }

    mutate {
      remove_field => ["[result][histogram-latency]"]
      rename => { "[test][source]" => "src_host" }
      rename => { "[test][dest]" => "dest_host" }
      # rename => { "HOSTORIP" => "src" }
      # rename => { "HOSTORIP" => "dest" }
    }

    # duplicate
    clone {
      clones => ["owd", "packetloss"]
    }

    # cleanups
    if [type] == "owd" {
      mutate {
        rename => { "[type]" => "[@metadata][type]" }
      }
      mutate {
        remove_field => ["type"]
      }
    } else { # packetloss
      mutate {
        rename => { "[type]" => "[@metadata][type]" }
        rename => { "[result][packets_lost]" => ["packets_lost"] } 
        rename => { "[result][packets_duplicated]" => ["packets_duplicated"] } 
        rename => { "[result][packets_reordered]" => ["packets_reordered"] } 
        rename => { "[result][packets-sent]" => ["packets-sent"] } 
      }
      mutate {
        remove_field => ["delay_mean","delay_median","delay_sd"]
      }
    }

    # cleanup

  } else {
    mutate {
      add_field => { "[@metadata][type]" => "unknown" } 
    }
  }
  
  mutate{
    remove_field => ["type", "test", "result"]
  }

}

output {

  stdout {
    codec => json
  }

  if "_jsonparsefailure" in [tags] {
    file {
      path => "/var/log/logstash/json_parse_failure.txt"
    }
  }
  else {
    file{
      path => "/var/log/logstash/correct_%{[@metadata][type]}.json"
    }
  }

  elasticsearch {
    hosts => "atlas-kibana.mwt2.org"
    ssl => true
    index => 'test_ps_%{[@metadata][type]}'
    user => "uc_logstash_indexer"
    password => "${LOGSTASH_PWD}"
    document_id => "%{[@metadata][id]}"
  }

}

# split off packet_loss
# IPv from lookup. if both have ipv6 use IPV6.
