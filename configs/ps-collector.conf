input {

  http {
    host => "0.0.0.0"
    port => "80"
  }
  
}

filter {

  mutate {
    remove_field => "[task][test]"
    remove_field => [reference]
  }

  if [test][type]=="trace" {
    mutate {
      add_field => { "[@metadata][type]" => "trace" } 
    }
  } else if [test][type]=="latencybg" {
    
    ruby {
        path => "/usr/share/logstash/filters/latency.rb"
    }

    mutate {
      remove_field => ["[run][result-merged][histogram-latency]"]
      remove_field => ["[result][histogram-latency]"]
      add_field => { "[@metadata][type]" => "owd" }
      
      rename => { "[test][source]" => "src_host" }
      rename => { "[test][dest]" => "dest_host" }
      # rename => { "HOSTORIP" => "src" }
      # rename => { "HOSTORIP" => "dest" }
    }

  } else {
    mutate {
      add_field => { "[@metadata][type]" => "unknown" } 
    }
  }

}

output {

  stdout {
    codec => json
  }

  if "_jsonparsefailure" in [tags] {
    file {
      path => "/var/log/logstash/json_parse_failure.txt"
    }
  }
  else {
    file{
      path => "/var/log/logstash/correct_%{[@metadata][type]}.json"
    }
  }

  elasticsearch {
    hosts => "atlas-kibana.mwt2.org"
    ssl => true
    index => 'test_ps_%{[@metadata][type]}'
    user => "uc_logstash_indexer"
    password => "${LOGSTASH_PWD}"
  }

}