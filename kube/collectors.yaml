kind: Service
apiVersion: v1
metadata:
  name: uc-logstash-udp
  namespace: aaas
  annotations:
    metallb.universe.tf/allow-shared-ip: "uc-logstash"
  labels:
    k8s-app: uc-logstash
spec:
  type: LoadBalancer
  loadBalancerIP: 192.170.227.237
  ports:
    - name: xcache-g-stream
      port: 9000
      targetPort: 9000
      protocol: UDP
  selector:
    k8s-app: uc-logstash
---
kind: Service
apiVersion: v1
metadata:
  name: uc-logstash-tcp
  namespace: aaas
  annotations:
    metallb.universe.tf/allow-shared-ip: "uc-logstash"
  labels:
    k8s-app: uc-logstash
spec:
  type: LoadBalancer
  loadBalancerIP: 192.170.227.237
  ports:
    - name: xcache
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    k8s-app: uc-logstash
---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: uc-logstash
#   namespace: aaas
#   labels:
#     k8s-app: uc-logstash
#   annotations:
#     kubernetes.io/ingress.class: slate
#     certmanager.k8s.io/cluster-issuer: letsencrypt-prod
# spec:
#   tls:
#   - hosts:
#     - logstash.atlas-ml.org
#     secretName: autogenerated-for-uc-logstash
#   rules:
#   - host: logstash.atlas-ml.org
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: uc-logstash
#           servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uc-logstash
  namespace: aaas
  labels:
    k8s-app: uc-logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: uc-logstash
  template:
    metadata:
      labels:
        k8s-app: uc-logstash
    spec:
      containers:
      - name: uc-logstash
        image: atlasanalyticsservice/uc_ls_collectors:latest
        command: ["sleep"]
        args: ["infinity"]
        env:
        - name: LOGSTASH_PWD
          valueFrom:
            secretKeyRef:
              name: logstash-pwd
              key: password

